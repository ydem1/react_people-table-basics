{"version":3,"sources":["components/HomePage.tsx","components/NotFoundPage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonItem.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","utils/normalizePeople.ts","App.tsx","index.tsx"],"names":["HomePage","className","NotFoundPage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonItem","person","name","sex","born","died","fatherName","motherName","mother","father","slug","peopleSlug","useParams","classNames","href","PeopleTable","people","map","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","useEffect","peopleFromServer","motherPerson","find","fatherPerson","normalizePeople","catch","length","App","role","isActive","to","window","location","hash","replace","path","element","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.34a805a1.chunk.js","sourcesContent":["import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonItem: React.FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    mother,\n    father,\n    slug,\n  } = person;\n\n  const { peopleSlug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({ 'has-background-warning': peopleSlug === slug })}\n    >\n      <td>\n        <a\n          className={classNames({ 'has-text-danger': sex === 'f' })}\n          href={`#/people/${slug}`}\n        >\n          {name}\n        </a>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother ? (\n          <a\n            className=\"has-text-danger\"\n            href={`#/people/${mother.slug}`}\n          >\n            {motherName}\n          </a>\n        ) : (\n          motherName || '-'\n        )}\n      </td>\n\n      <td>\n        {father ? (\n          <a\n            href={`#/people/${father.slug}`}\n          >\n            {fatherName}\n          </a>\n        ) : (\n          fatherName || '-'\n        )}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from '../types';\nimport { PersonItem } from './PersonItem';\n\ntype Props = {\n  people: Person[]\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonItem\n            key={person.slug}\n            person={person}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { normalizePeople } from '../utils/normalizePeople';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    setIsError(false);\n\n    getPeople()\n      .then(peopleFromServer => {\n        setPeople(normalizePeople(peopleFromServer));\n        setIsLoading(false);\n      })\n      .catch(() => {\n        setIsLoading(false);\n        setIsError(true);\n      });\n  }, []);\n\n  if (isLoading) {\n    return (\n      <>\n        <h1 className=\"title\">People Page</h1>\n        <Loader />\n      </>\n    );\n  }\n\n  if (isError) {\n    return (\n      <>\n        <h1 className=\"title\">People Page</h1>\n\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      </>\n    );\n  }\n\n  if (people.length === 0) {\n    return (\n      <>\n        <h1 className=\"title\">People Page</h1>\n\n        <p data-cy=\"noPeopleMessage\">\n          There are no people on the server\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <PeopleTable people={people} />\n    </>\n  );\n};\n","import { Person } from '../types';\n\nexport function normalizePeople(peopleFromServer: Person[]): Person[] {\n  const people = peopleFromServer.map(person => {\n    const motherPerson = peopleFromServer.find(mother => (\n      mother.name === person.motherName));\n\n    const fatherPerson = peopleFromServer.find(father => (\n      father.name === person.fatherName));\n\n    return {\n      ...person,\n      mother: motherPerson,\n      father: fatherPerson,\n    };\n  });\n\n  return people;\n}\n","import {\n  Routes,\n  Route,\n  Navigate,\n  NavLink,\n} from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport './App.scss';\n\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              className={({ isActive }) => (\n                classNames('navbar-item', {\n                  'has-background-grey-lighter': isActive,\n                })\n              )}\n              to=\"/\"\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              className={({ isActive }) => (\n                classNames('navbar-item', {\n                  'has-background-grey-lighter': isActive,\n                })\n              )}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <div className=\"block\">\n            <div className=\"box table-container\">\n              {(window.location.hash === ''\n              || window.location.hash === '#/home') && (\n                <Navigate to=\"/\" replace />\n              )}\n\n              <Routes>\n                <Route path=\"/\" element={<HomePage />} />\n\n                <Route path=\"people/:peopleSlug?\">\n                  <Route index element={<PeoplePage />} />\n                  <Route path=\":peopleSlug\" element={<PeoplePage />} />\n                </Route>\n\n                <Route path=\"*\" element={<NotFoundPage />} />\n              </Routes>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}